server:
  host: "0.0.0.0"
  port: 80
  reload: false
  log_level: "info"

tool_registry:
  concurrency_limit: 10

breaker_settings:
  database:
    failure_threshold: 3
  external_api:
    failure_threshold: 5
  file_system:
    failure_threshold: 2

plugins:
  infrastructure: {}
  resources:
    database:
      type: entity.infrastructure.duckdb:DuckDBInfrastructure
      path: ./agent.duckdb
    # vector_store:
    #   type: plugins.builtin.resources.duckdb_vector_store:DuckDBVectorStore
    #   table: vector_mem
    #   embedding_model:
    #     name: dummy
    #     dimensions: 3
    # llm:
    #   type: plugins.builtin.resources.llm.unified:UnifiedLLMResource
    #   provider: ollama
    #   base_url: "${OLLAMA_BASE_URL}"
    #   model: "${OLLAMA_MODEL}"
    #   temperature: 0.7
    #   retries: 5
    #   backoff: 2.0
  agent_resources:
    memory:
      type: entity.resources.memory:Memory
      dependencies: [database, vector_store?]
    # filesystem:
    #   type: plugins.builtin.resources.s3_filesystem:S3FileSystem
    #   bucket: agent-files
    #   region: us-east-1
    # storage:
    #   type: plugins.builtin.resources.storage_resource:StorageResource
#   storage:
#     type: plugins.builtin.resources.storage_resource:StorageResource
#     database:
#       type: entity.infrastructure.postgres:PostgresInfrastructure
#       host: prod-db.example.com
#       port: 5432
#       name: prod_storage
#       username: prod_user
#       password: securepass
#     vector_store:
#       type: plugins.builtin.resources.pg_vector_store:PgVectorStore
#       dimensions: 768
#       table: embeddings
#     filesystem:
#       type: plugins.builtin.resources.s3_filesystem:S3FileSystem
#       bucket: agent-files
#       region: us-east-1
  custom_resources: {}
  tools:
    weather:
      type: user_plugins.tools.weather_api_tool:WeatherApiTool
      api_key: "${WEATHER_API_KEY}"
      base_url: "https://api.weather.com"
      timeout: 30
    calculator:
      type: user_plugins.tools.calculator_tool:CalculatorTool
      precision: 10
  adapters:
    # http:
    #   type: plugins.builtin.adapters.http:HTTPAdapter
    #   stages: [parse, deliver]
    #   auth_tokens:
    #     - ${HTTP_TOKEN}
    #   rate_limit:
    #     requests: 100
    #     interval: 60
    #   audit_log_path: logs/audit.log
    #   dashboard: false
    # cli:
    #   type: plugins.builtin.adapters.cli:CLIAdapter
    #   stages: [deliver]
    # logging:
    #   type: plugins.builtin.adapters.logging:LoggingAdapter
    #   stages: [deliver]
  prompts:
    chain_of_thought:
      type: entity.plugins.prompts.chain_of_thought:ChainOfThoughtPrompt
      enable_reasoning: true
      max_steps: 5
    react:
      type: entity.plugins.prompts.react:ReActPrompt
      max_steps: 5
    conversation_history:
      type: user_plugins.prompts.conversation_history:ConversationHistory
      db_schema: public
      history_table: chat_history
      stages: [parse, deliver]
    memory_retrieval:
      type: user_plugins.prompts.memory_retrieval:MemoryRetrievalPrompt
      max_context_length: 4000
      similarity_threshold: 0.7
      stages: [think]
    intent_classifier:
      type: user_plugins.prompts.intent_classifier:IntentClassifierPrompt
      confidence_threshold: 0.8
