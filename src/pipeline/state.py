from __future__ import annotations

from dataclasses import dataclass, field
from datetime import datetime
from typing import Any, Dict, List, Optional

from .stages import PipelineStage
from .metrics import MetricsCollector


@dataclass
class LLMResponse:
    """Result returned by an LLM call.

    Attributes:
        content: Text generated by the model.
        metadata: Provider-specific metadata about the call.
    """

    content: str
    metadata: Dict[str, Any] = field(default_factory=dict)


@dataclass
class ConversationEntry:
    """Single message stored in the conversation history.

    Attributes:
        content: Message text.
        role: Speaker role (e.g. ``user`` or ``assistant``).
        timestamp: When the message was created.
        metadata: Extra data recorded with the entry.
    """

    content: str
    role: str
    timestamp: datetime
    metadata: Dict[str, Any] = field(default_factory=dict)


@dataclass(eq=False)
class ToolCall:
    """Description of a tool execution request.

    Attributes:
        name: Registry key of the tool to run.
        params: Parameters passed to the tool.
        result_key: Key used to store the tool result.
        source: Origin of the call (direct or generated).
    """

    name: str
    params: Dict[str, Any]
    result_key: str
    source: str = "direct_execution"


@dataclass
class FailureInfo:
    """Captured information about a pipeline failure.

    Attributes:
        stage: Stage in which the error occurred.
        plugin_name: Plugin reporting the failure.
        error_type: Name of the raised exception class.
        error_message: Human readable description.
        original_exception: Original exception instance.
        context_snapshot: Optional snapshot of pipeline state.
        timestamp: When the failure was recorded.
    """

    stage: str
    plugin_name: str
    error_type: str
    error_message: str
    original_exception: Exception
    context_snapshot: Dict[str, Any] | None = None
    timestamp: datetime = field(default_factory=datetime.now)


@dataclass
class PipelineState:
    """Mutable state shared across pipeline stages.

    This object is created at the start of each pipeline run and is
    passed to every plugin.

    Attributes:
        conversation: History of conversation messages.
        response: Final response to return to the caller.
        prompt: Prompt text currently being processed.
        stage_results: Values produced during stage execution.
        pending_tool_calls: Tool calls awaiting execution.
        metadata: Arbitrary per-run metadata for plugins.
        pipeline_id: Unique identifier for this run.
        current_stage: Stage that is currently executing.
        metrics: Collector used to record runtime metrics.
        failure_info: Details about any failure encountered.
    """

    conversation: List[ConversationEntry]
    response: Any = None
    prompt: str = ""
    stage_results: Dict[str, Any] = field(default_factory=dict)
    pending_tool_calls: List[ToolCall] = field(default_factory=list)
    metadata: Dict[str, Any] = field(default_factory=dict)
    pipeline_id: str = ""
    current_stage: Optional[PipelineStage] = None
    metrics: MetricsCollector = field(default_factory=MetricsCollector)
    failure_info: Optional[FailureInfo] = None
