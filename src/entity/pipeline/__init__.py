"""Public pipeline API."""

from __future__ import annotations

import pkgutil
from typing import TYPE_CHECKING

__path__ = pkgutil.extend_path(globals().get("__path__", []), __name__)

from entity.core.circuit_breaker import CircuitBreaker, RetryPolicy
from entity.core.context import PluginContext
from entity.core.plugins import (
    AdapterPlugin,
    AgentResource,
    AutoGeneratedPlugin,
    FailurePlugin,
    InfrastructurePlugin,
    InputAdapterPlugin,
    OutputAdapterPlugin,
    Plugin,
    PromptPlugin,
    ResourcePlugin,
    ToolPlugin,
    ValidationResult,
)
from entity.core.plugins.base import ConfigurationError, ReconfigResult
from entity.core.state_logger import LogReplayer, StateLogger
from .config.config_update import ConfigUpdateResult, update_plugin_configuration
from .errors import create_static_error_response
from .exceptions import CircuitBreakerTripped
from .initializer import (
    ClassRegistry,
    SystemInitializer,
    initialization_cleanup_context,
)
from .pipeline import create_default_response, execute_pipeline
from .stages import PipelineStage
from .state import (
    ConversationEntry,
    FailureInfo,
    LLMResponse,
    PipelineState,
    ToolCall,
)
from .worker import PipelineWorker
from .workflow import Pipeline, Workflow
from . import initializer, pipeline, utils

if TYPE_CHECKING:  # pragma: no cover - imported for type checking only
    from typing import Any

__all__ = [
    "PipelineStage",
    "PipelineState",
    "PluginContext",
    "ConversationEntry",
    "ToolCall",
    "LLMResponse",
    "FailureInfo",
    "RetryPolicy",
    "CircuitBreaker",
    "CircuitBreakerTripped",
    "Plugin",
    "InfrastructurePlugin",
    "ResourcePlugin",
    "AgentResource",
    "ToolPlugin",
    "PromptPlugin",
    "AdapterPlugin",
    "InputAdapterPlugin",
    "OutputAdapterPlugin",
    "FailurePlugin",
    "AutoGeneratedPlugin",
    "ValidationResult",
    "ReconfigResult",
    "ConfigurationError",
    "ClassRegistry",
    "SystemInitializer",
    "initialization_cleanup_context",
    "execute_pipeline",
    "create_default_response",
    "create_static_error_response",
    "ConfigUpdateResult",
    "update_plugin_configuration",
    "StateLogger",
    "LogReplayer",
    "Pipeline",
    "Workflow",
    "PipelineWorker",
    "pipeline",
    "initializer",
    "utils",
]
