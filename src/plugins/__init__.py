"""Plugins package for the Entity pipeline.

This module lazily re-exports the core plugin base classes from
``pipeline.base_plugins`` to avoid circular dependencies. Usage::

    from plugins import BasePlugin, ToolPlugin
"""

from __future__ import annotations

from typing import Any

__all__ = [
    "AdapterPlugin",
    "AutoGeneratedPlugin",
    "BasePlugin",
    "FailurePlugin",
    "PromptPlugin",
    "ResourcePlugin",
    "ToolPlugin",
]


def __getattr__(name: str) -> Any:
    if name in __all__:
        from pipeline import base_plugins

        return getattr(base_plugins, name)
    raise AttributeError(f"module {__name__!r} has no attribute {name!r}")
